{
    "annotations": {
      "list": [
        {
          "builtIn": 1,
          "datasource": {
            "type": "grafana",
            "uid": "-- Grafana --"
          },
          "enable": true,
          "hide": true,
          "iconColor": "rgba(0, 211, 255, 1)",
          "name": "Annotations & Alerts",
          "target": {
            "limit": 100,
            "matchAny": false,
            "tags": [],
            "type": "dashboard"
          },
          "type": "dashboard"
        }
      ]
    },
    "editable": true,
    "fiscalYearStartMonth": 0,
    "graphTooltip": 0,
    "id": 2,
    "links": [],
    "liveNow": false,
    "panels": [
      {
        "datasource": {
          "type": "influxdb",
          "uid": "vCxMVucVk"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 7,
          "w": 4,
          "x": 0,
          "y": 0
        },
        "id": 8,
        "options": {
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "sum"
            ],
            "fields": "",
            "limit": 1,
            "values": true
          },
          "showThresholdLabels": false,
          "showThresholdMarkers": true
        },
        "pluginVersion": "9.3.2",
        "targets": [
          {
            "datasource": {
              "type": "influxdb",
              "uid": "vCxMVucVk"
            },
            "query": "from(bucket: \"gnmi\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"/network_instances/network_instance/protocols/protocol/bgp/neighbors/neighbor/afi_safis/afi_safi/state/prefixes/sent\")\n  |> filter(fn: (r) => r[\"/network-instances/network-instance/protocols/protocol/name\"] == \"BGP\")\n  |> filter(fn: (r) => r[\"_field\"] == \"/network_instances/network_instance/protocols/protocol/bgp/neighbors/neighbor/afi_safis/afi_safi/state/prefixes/sent\")\n  |> filter(fn: (r) => r[\"afi_safi_name\"] == \"IPV4_UNICAST\")\n  |> filter(fn: (r) => r[\"host\"] == \"${switch}\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> yield(name: \"mean\")",
            "refId": "A"
          }
        ],
        "title": "Prefixes sent",
        "transparent": true,
        "type": "gauge"
      },
      {
        "datasource": {
          "type": "influxdb",
          "uid": "vCxMVucVk"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 7,
          "w": 4,
          "x": 4,
          "y": 0
        },
        "id": 6,
        "options": {
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "limit": 1,
            "values": true
          },
          "showThresholdLabels": false,
          "showThresholdMarkers": true
        },
        "pluginVersion": "9.3.2",
        "targets": [
          {
            "datasource": {
              "type": "influxdb",
              "uid": "vCxMVucVk"
            },
            "query": "from(bucket: \"gnmi\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"/network_instances/network_instance/protocols/protocol/bgp/neighbors/neighbor/afi_safis/afi_safi/state/prefixes/sent\" or r[\"_measurement\"] == \"/network_instances/network_instance/protocols/protocol/bgp/neighbors/neighbor/afi_safis/afi_safi/state/prefixes/received_pre_policy\")\n  |> filter(fn: (r) => r[\"/network-instances/network-instance/protocols/protocol/name\"] == \"BGP\")\n  |> filter(fn: (r) => r[\"_field\"] == \"/network_instances/network_instance/protocols/protocol/bgp/neighbors/neighbor/afi_safis/afi_safi/state/prefixes/received_pre_policy\" or r[\"_field\"] == \"/network_instances/network_instance/protocols/protocol/bgp/neighbors/neighbor/afi_safis/afi_safi/state/prefixes/sent\")\n  |> filter(fn: (r) => r[\"afi_safi_name\"] == \"IPV4_UNICAST\")\n  |> filter(fn: (r) => r[\"host\"] == \"${switch}\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> yield(name: \"mean\")",
            "refId": "A"
          }
        ],
        "title": "BGP Prefixes received",
        "type": "gauge"
      },
      {
        "datasource": {
          "type": "influxdb",
          "uid": "vCxMVucVk"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 7,
          "w": 4,
          "x": 8,
          "y": 0
        },
        "id": 4,
        "options": {
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "limit": 1,
            "values": true
          },
          "showThresholdLabels": false,
          "showThresholdMarkers": true
        },
        "pluginVersion": "9.3.2",
        "targets": [
          {
            "datasource": {
              "type": "influxdb",
              "uid": "vCxMVucVk"
            },
            "query": "from(bucket: \"gnmi\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"/network_instances/network_instance/protocols/protocol/bgp/neighbors/neighbor/afi_safis/afi_safi/state/prefixes/installed\")\n  |> filter(fn: (r) => r[\"/network-instances/network-instance/protocols/protocol/name\"] == \"BGP\")\n  |> filter(fn: (r) => r[\"_field\"] == \"/network_instances/network_instance/protocols/protocol/bgp/neighbors/neighbor/afi_safis/afi_safi/state/prefixes/installed\")\n  |> filter(fn: (r) => r[\"afi_safi_name\"] == \"IPV4_UNICAST\")\n  |> filter(fn: (r) => r[\"host\"] == \"${switch}\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> yield(name: \"mean\")",
            "refId": "A"
          }
        ],
        "title": "Installed BGP Prefixes",
        "type": "gauge"
      },
      {
        "datasource": {
          "type": "influxdb",
          "uid": "vCxMVucVk"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 7,
          "w": 4,
          "x": 12,
          "y": 0
        },
        "id": 2,
        "options": {
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "limit": 3,
            "values": true
          },
          "showThresholdLabels": false,
          "showThresholdMarkers": true
        },
        "pluginVersion": "9.3.2",
        "targets": [
          {
            "datasource": {
              "type": "influxdb",
              "uid": "vCxMVucVk"
            },
            "query": "from(bucket: \"gnmi\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"/network_instances/network_instance/protocols/protocol/bgp/neighbors/neighbor/config/peer_as\")\n  |> filter(fn: (r) => r[\"/network-instances/network-instance/protocols/protocol/name\"] == \"BGP\")\n  |> filter(fn: (r) => r[\"_field\"] == \"/network_instances/network_instance/protocols/protocol/bgp/neighbors/neighbor/config/peer_as\")\n  |> filter(fn: (r) => r[\"host\"] == \"${switch}\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> yield(name: \"mean\")",
            "refId": "A"
          }
        ],
        "title": "Peer AS Numbers",
        "type": "gauge"
      }
    ],
    "refresh": false,
    "schemaVersion": 37,
    "style": "dark",
    "tags": [],
    "templating": {
      "list": [
        {
          "current": {
            "selected": true,
            "text": "DC1-SPINE2",
            "value": "DC1-SPINE2"
          },
          "definition": "import \"influxdata/influxdb/v1\"\nv1.tagValues(\n    bucket: v.bucket,\n    tag: \"host\",\n    predicate: (r) => true,\n    start: -1d\n)",
          "hide": 0,
          "includeAll": false,
          "multi": false,
          "name": "switch",
          "options": [],
          "query": "import \"influxdata/influxdb/v1\"\nv1.tagValues(\n    bucket: v.bucket,\n    tag: \"host\",\n    predicate: (r) => true,\n    start: -1d\n)",
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "type": "query"
        }
      ]
    },
    "time": {
      "from": "now-2d",
      "to": "now"
    },
    "timepicker": {},
    "timezone": "",
    "title": "BGP Stats",
    "uid": "sgioa-h4z",
    "version": 8,
    "weekStart": ""
  }